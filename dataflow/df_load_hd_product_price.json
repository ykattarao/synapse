{
	"name": "df_load_hd_product_price",
	"properties": {
		"folder": {
			"name": "01 data_domain/00 product/01 hd_product"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_hd_product_price_process",
						"type": "DatasetReference"
					},
					"name": "productPrice"
				},
				{
					"dataset": {
						"referenceName": "ds_adls_hd_product_upc_mstr",
						"type": "DatasetReference"
					},
					"name": "productUpc"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adls_hd_product_price_mstr",
						"type": "DatasetReference"
					},
					"name": "sinkHDProductPriceAdls"
				}
			],
			"transformations": [
				{
					"name": "selectHits"
				},
				{
					"name": "filterHits"
				},
				{
					"name": "flattenHits"
				},
				{
					"name": "selectAttributes"
				},
				{
					"name": "removeDuplicate"
				},
				{
					"name": "selectUpcAttributes"
				},
				{
					"name": "joinProductUpc"
				},
				{
					"name": "projectAttributes"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {_scroll_id} as string,",
				"          {_shards} as (failed as boolean, skipped as boolean, successful as boolean, total as boolean),",
				"          hits as (hits as ({_id} as string, {_index} as string, {_score} as double, {_source} as (pr_qy as double, pr_zone_cd as short, prod_id as integer, prom_pr_qy as double, reg_pr_qy as double, spec_cd as string, unit_pr_qy as double), {_type} as string)[], max_score as double, total as integer),",
				"          timed_out as boolean,",
				"          took as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['/hd-product-price/product/process','/hd-product-price/product/process/archive'],",
				"     documentForm: 'documentPerLine') ~> productPrice",
				"source(output(",
				"          pod_id as integer,",
				"          upcs as string[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> productUpc",
				"productPrice select(mapColumn(",
				"          hits",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectHits",
				"selectHits filter(size(hits.hits) > 0) ~> filterHits",
				"filterHits foldDown(unroll(hits.hits),",
				"     mapColumn(",
				"          source = hits.hits.{_source}",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenHits",
				"flattenHits select(mapColumn(",
				"          pod_id = source.prod_id,",
				"          pr_zone_cd = source.pr_zone_cd,",
				"          spec_cd = source.spec_cd,",
				"          pr_qy = source.pr_qy,",
				"          unit_pr_qy = source.unit_pr_qy,",
				"          reg_pr_qy = source.reg_pr_qy,",
				"          prom_pr_qy = source.prom_pr_qy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectAttributes",
				"selectAttributes aggregate(groupBy(pod_id,",
				"          pr_zone_cd),",
				"     spec_cd = first(spec_cd),",
				"          pr_qy = first(pr_qy),",
				"          unit_pr_qy = first(unit_pr_qy),",
				"          reg_pr_qy = first(reg_pr_qy),",
				"          prom_pr_qy = first(prom_pr_qy)) ~> removeDuplicate",
				"productUpc select(mapColumn(",
				"          pod_id,",
				"          upcs",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUpcAttributes",
				"removeDuplicate, selectUpcAttributes join(removeDuplicate@pod_id == selectUpcAttributes@pod_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinProductUpc",
				"joinProductUpc select(mapColumn(",
				"          pod_id = removeDuplicate@pod_id,",
				"          pr_zone_cd,",
				"          spec_cd,",
				"          pr_qy,",
				"          unit_pr_qy,",
				"          reg_pr_qy,",
				"          prom_pr_qy,",
				"          upcs",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> projectAttributes",
				"projectAttributes sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          pod_id,",
				"          pr_zone_cd,",
				"          spec_cd,",
				"          pr_qy,",
				"          unit_pr_qy,",
				"          reg_pr_qy,",
				"          prom_pr_qy,",
				"          upcs",
				"     )) ~> sinkHDProductPriceAdls"
			]
		}
	}
}