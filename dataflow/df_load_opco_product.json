{
	"name": "df_load_opco_product",
	"properties": {
		"folder": {
			"name": "01 data_domain/01 opco/00 opco_product"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_opco_product_process",
						"type": "DatasetReference"
					},
					"name": "opcoProducts"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adls_opco_product_mstr",
						"type": "DatasetReference"
					},
					"name": "sinkOpcoProductsAdls"
				}
			],
			"transformations": [
				{
					"name": "selectHits"
				},
				{
					"name": "flattenHits"
				},
				{
					"name": "flattenPriceZone"
				},
				{
					"name": "flattenStoreProducts"
				},
				{
					"name": "filterHits"
				},
				{
					"name": "filterPriceZones"
				},
				{
					"name": "filterStoreProducts"
				},
				{
					"name": "removeDuplicate"
				},
				{
					"name": "projectAttributes"
				}
			],
			"scriptLines": [
				"parameters{",
				"     ES_INDEX_DOMAIN as string,",
				"     ES_INDEX_NAME as string,",
				"     APP_OPCO_ID as string,",
				"     APP_BANNER_ID as string",
				"}",
				"source(output(",
				"          {_scroll_id} as string,",
				"          took as integer,",
				"          timed_out as boolean,",
				"          terminated_early as boolean,",
				"          {_shards} as (total as integer, successful as integer, skipped as integer, failed as integer),",
				"          hits as (total as integer, max_score as double, hits as ({_index} as string, {_type} as string, {_id} as string, {_score} as double, {_source} as (id as string, circularId as string, productIdentifier as (cncProductIdentifier as (bannerId as integer, storeNumber as integer, saleCode as string), upcs as string[]), couponId as integer, upcs as string[], pickStoreLocationId as string, unitOfMeasure as string, active as boolean, saleRestrictionCategories as integer[], priceZones as (storeNumber as integer, bannerId as integer, ecomStoreId as integer, storeId as string, opcoId as string, id as integer)[], inventoryFlag as boolean, inventoryFlagPresentInFeed as boolean, storeProducts as (pricedProduct as (regularPrice as double, salePrice as string, conversionFactor as string, productId as integer), categoryPaths as (path as (nodeId as integer, categoryName as string)[])[], rootCategoryNodes as (nodeId as integer, categoryName as string, joined as string)[])[], department as string, aisle as string, suppressed as boolean))[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: [(concat(iif(lower($ES_INDEX_NAME) == \"cnc-products-oda\", \"opco-product-price\", ",
				"        iif(lower($ES_INDEX_NAME) == \"cnc-price-adjustments-oda\", \"opco-product-price-adj\",",
				"            iif(lower($ES_INDEX_NAME) == \"product-info\", \"static-product-info\",",
				"                iif(lower($ES_INDEX_NAME) == \"service_locations\", \"service-location\", \"error\")))), ",
				"          iif(lower($APP_OPCO_ID) == \"-\", \"/process\", concat(\"/\", lower($APP_OPCO_ID), \"/process\")))),(concat(iif(lower($ES_INDEX_NAME) == \"cnc-products-oda\", \"opco-product-price\", ",
				"        iif(lower($ES_INDEX_NAME) == \"cnc-price-adjustments-oda\", \"opco-product-price-adj\",",
				"            iif(lower($ES_INDEX_NAME) == \"product-info\", \"static-product-info\",",
				"                iif(lower($ES_INDEX_NAME) == \"service_locations\", \"service-location\", \"error\")))), ",
				"          iif(lower($APP_OPCO_ID) == \"-\", \"/process/archive\", concat(\"/\", lower($APP_OPCO_ID), \"/process/archive\"))))],",
				"     documentForm: 'documentPerLine') ~> opcoProducts",
				"opcoProducts select(mapColumn(",
				"          hits",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectHits",
				"filterHits foldDown(unroll(hits.hits),",
				"     mapColumn(",
				"          source = hits.hits.{_source}",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenHits",
				"filterPriceZones foldDown(unroll(source.priceZones),",
				"     mapColumn(",
				"          bannerId = source.productIdentifier.cncProductIdentifier.bannerId,",
				"          storeNumber = source.productIdentifier.cncProductIdentifier.storeNumber,",
				"          saleCode = source.productIdentifier.cncProductIdentifier.saleCode,",
				"          storeProducts = source.storeProducts,",
				"          opco = source.priceZones.opcoId,",
				"          storeId = source.priceZones.storeId,",
				"          ecomStoreId = source.priceZones.ecomStoreId,",
				"          priceZoneId = source.priceZones.id,",
				"          upcs = source.upcs,",
				"          unitOfMeasure = source.unitOfMeasure,",
				"          inventoryFlag = source.inventoryFlag,",
				"          inventoryFlagPresentInFeed = source.inventoryFlagPresentInFeed,",
				"          active = source.active,",
				"          suppressed = source.suppressed,",
				"          circularId = source.circularId,",
				"          couponId = source.couponId,",
				"          saleRestrictionCategories = source.saleRestrictionCategories,",
				"          pickStoreLocationId = source.pickStoreLocationId,",
				"          department = source.department,",
				"          aisle = source.aisle",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenPriceZone",
				"filterStoreProducts foldDown(unroll(storeProducts),",
				"     mapColumn(",
				"          bannerId,",
				"          storeNumber,",
				"          saleCode,",
				"          productId = storeProducts.pricedProduct.productId,",
				"          opco,",
				"          storeId,",
				"          ecomStoreId,",
				"          priceZoneId,",
				"          upcs,",
				"          unitOfMeasure,",
				"          inventoryFlag,",
				"          inventoryFlagPresentInFeed,",
				"          active,",
				"          suppressed,",
				"          circularId,",
				"          couponId,",
				"          saleRestrictionCategories,",
				"          pickStoreLocationId,",
				"          department,",
				"          aisle,",
				"          regularPrice = storeProducts.pricedProduct.regularPrice,",
				"          salePrice = storeProducts.pricedProduct.salePrice,",
				"          conversionFactor = storeProducts.pricedProduct.conversionFactor",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenStoreProducts",
				"selectHits filter(size(hits.hits) > 0) ~> filterHits",
				"flattenHits filter(size(source.priceZones) > 0) ~> filterPriceZones",
				"flattenPriceZone filter(size(storeProducts) > 0) ~> filterStoreProducts",
				"flattenStoreProducts aggregate(groupBy(bannerId,",
				"          storeNumber,",
				"          saleCode,",
				"          productId),",
				"     opco = first(opco),",
				"          storeId = first(storeId),",
				"          ecomStoreId = first(ecomStoreId),",
				"          priceZoneId = first(priceZoneId),",
				"          upcs = first(upcs),",
				"          unitOfMeasure = first(unitOfMeasure),",
				"          inventoryFlag = first(inventoryFlag),",
				"          inventoryFlagPresentInFeed = first(inventoryFlagPresentInFeed),",
				"          active = first(active),",
				"          suppressed = first(suppressed),",
				"          circularId = first(circularId),",
				"          couponId = first(couponId),",
				"          saleRestrictionCategories = first(saleRestrictionCategories),",
				"          pickStoreLocationId = first(pickStoreLocationId),",
				"          department = first(department),",
				"          aisle = first(aisle),",
				"          regularPrice = first(regularPrice),",
				"          salePrice = first(salePrice),",
				"          conversionFactor = first(conversionFactor)) ~> removeDuplicate",
				"removeDuplicate select(mapColumn(",
				"          bannerId,",
				"          storeNumber,",
				"          saleCode,",
				"          productId,",
				"          opco,",
				"          storeId,",
				"          ecomStoreId,",
				"          priceZoneId,",
				"          upcs,",
				"          unitOfMeasure,",
				"          inventoryFlag,",
				"          inventoryFlagPresentInFeed,",
				"          active,",
				"          suppressed,",
				"          circularId,",
				"          couponId,",
				"          saleRestrictionCategories,",
				"          pickStoreLocationId,",
				"          department,",
				"          aisle,",
				"          regularPrice,",
				"          salePrice,",
				"          conversionFactor",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> projectAttributes",
				"projectAttributes sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 0,",
				"     mapColumn(",
				"          bannerId,",
				"          storeNumber,",
				"          saleCode,",
				"          productId,",
				"          opco,",
				"          storeId,",
				"          ecomStoreId,",
				"          priceZoneId,",
				"          upcs,",
				"          unitOfMeasure,",
				"          inventoryFlag,",
				"          inventoryFlagPresentInFeed,",
				"          active,",
				"          suppressed,",
				"          circularId,",
				"          couponId,",
				"          saleRestrictionCategories,",
				"          pickStoreLocationId,",
				"          department,",
				"          aisle,",
				"          regularPrice,",
				"          salePrice,",
				"          conversionFactor",
				"     )) ~> sinkOpcoProductsAdls"
			]
		}
	}
}