{
	"name": "pl_build_merch_cnt_cpt_cont_ctl",
	"properties": {
		"activities": [
			{
				"name": "ingest-content-cpt-cont-ctl",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "set-ingest-content-cpt-cont-ctl-path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "lkp-ext-start-time",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.1:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "InformixSource",
						"query": {
							"value": "@if(pipeline().parameters.PARAM_IS_DELTA,\nconcat('SELECT  cont_id,\n                file_ext_cd,\n                cont_desc_tx,\n                file_name_tx,\n                vndr_cd,\n                audt_cr_id,\n                TO_CHAR(audt_cr_dt, \"%Y-%m-%d\") as audt_cr_dt,\n                audt_upd_id,\n                TO_CHAR(audt_upd_dt, \"%Y-%m-%d\") as audt_upd_dt\n                FROM content:cpt_cont_ctl\n                WHERE (audt_cr_dt >= ''',formatDateTime(formatDateTime(activity('lkp-ext-start-time').output.firstRow.Prop_0,'MM-dd-yyyy'),'MM-dd-yyyy')\n                    ,'''',' OR ',\n                    'audt_upd_dt >= ''',formatDateTime(activity('lkp-ext-start-time').output.firstRow.Prop_0,'MM-dd-yyyy'),''')')\n,'SELECT        cont_id,\n                file_ext_cd,\n                cont_desc_tx,\n                file_name_tx,\n                vndr_cd,\n                audt_cr_id,\n                TO_CHAR(audt_cr_dt, \"%Y-%m-%d\") as audt_cr_dt,\n                audt_upd_id,\n                TO_CHAR(audt_upd_dt, \"%Y-%m-%d\") as audt_upd_dt\n                FROM content:cpt_cont_ctl')",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "cont_id",
									"type": "Int32"
								},
								"sink": {
									"name": "cont_id",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "file_ext_cd",
									"type": "String"
								},
								"sink": {
									"name": "file_ext_cd",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "cont_desc_tx",
									"type": "String"
								},
								"sink": {
									"name": "cont_desc_tx",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "file_name_tx",
									"type": "String"
								},
								"sink": {
									"name": "file_name_tx",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "vndr_cd",
									"type": "String"
								},
								"sink": {
									"name": "vndr_cd",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "audt_cr_id",
									"type": "String"
								},
								"sink": {
									"name": "audt_cr_id",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "audt_cr_dt",
									"type": "String"
								},
								"sink": {
									"name": "audt_cr_dt",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "audt_upd_id",
									"type": "String"
								},
								"sink": {
									"name": "audt_upd_id",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "audt_upd_dt",
									"type": "String"
								},
								"sink": {
									"name": "audt_upd_dt",
									"type": "String",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_qts_ifx_merch_domain_content_domain",
						"type": "DatasetReference",
						"parameters": {
							"IFX_DB_NM": {
								"value": "@pipeline().parameters.PARAM_IFX_DB_NM",
								"type": "Expression"
							},
							"IFX_TBL_NM": {
								"value": "@pipeline().parameters.PARAM_IFX_TB_NM",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_az_adls_merch_content_domain",
						"type": "DatasetReference",
						"parameters": {
							"PARAM_CONTENT_LAKE_PATH": {
								"value": "@variables('VAR_INGST_MERCH_FLDR_PATH')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "set-ingest-content-cpt-cont-ctl-path",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "VAR_INGST_MERCH_FLDR_PATH",
					"value": {
						"value": "@concat('opco/',toLower(pipeline().parameters.PARAM_OPCO),'/domain/',pipeline().parameters.PARAM_DOMAIN,'/lake/'\n        , formatDateTime(convertFromUtc(utcNow(),'Central Standard Time'), 'yyyy-MM-dd'),'-'\n        ,formatDateTime(convertFromUtc(utcNow(),'Central Standard Time'), 'hh-mm-ss')\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "update-btch-cntrl",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "record-count-checkpoint",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_update_btch_cntrl_fl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"START_TIME": {
							"value": "@convertFromUtc(activity('ingest-content-cpt-cont-ctl').ExecutionStartTime,'Central Standard Time')",
							"type": "Expression"
						},
						"END_TIME": {
							"value": "@convertFromUtc(activity('ingest-content-cpt-cont-ctl').ExecutionEndTime,'Central Standard Time')",
							"type": "Expression"
						},
						"RECORD_COUNT": {
							"value": "@activity('ingest-content-cpt-cont-ctl').output.rowsCopied",
							"type": "Expression"
						},
						"STATUS": {
							"value": "@activity('ingest-content-cpt-cont-ctl').status",
							"type": "Expression"
						},
						"PARAM_OPCO": {
							"value": "@toLower(pipeline().parameters.PARAM_OPCO)",
							"type": "Expression"
						},
						"PARAM_DOMAIN": {
							"value": "@pipeline().parameters.PARAM_DOMAIN",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "lkp-ext-start-time",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.0:30:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_az_adls_cntrl_fl_latest",
						"type": "DatasetReference",
						"parameters": {
							"PARAM_OPCO": {
								"value": "@pipeline().parameters.PARAM_OPCO",
								"type": "Expression"
							},
							"PARAM_DOMAIN": {
								"value": "@pipeline().parameters.PARAM_DOMAIN",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "record-count-checkpoint",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ingest-content-cpt-cont-ctl",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('ingest-content-cpt-cont-ctl').output.rowsCopied, 0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "mdm-content-cpt-cont-ctl",
							"type": "SynapseNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.1:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "nb_mdm_merch_cnt_cpt_cont_ctl",
									"type": "NotebookReference"
								},
								"parameters": {
									"BASE_ADLS_CONN_STR": {
										"value": {
											"value": "@pipeline().parameters.PARAM_BASE_ADLS_CONN_STR",
											"type": "Expression"
										},
										"type": "string"
									},
									"SOURCE_LAKE_RELATIVE_PATH": {
										"value": {
											"value": "@variables('VAR_INGST_MERCH_FLDR_PATH')",
											"type": "Expression"
										},
										"type": "string"
									},
									"KEY_COL": {
										"value": {
											"value": "@pipeline().parameters.PARAM_KEY_COL",
											"type": "Expression"
										},
										"type": "string"
									},
									"NO_OF_PARTITIONS": {
										"value": {
											"value": "@pipeline().parameters.PARAM_NO_OF_PARTITIONS",
											"type": "Expression"
										},
										"type": "int"
									},
									"IS_DELTA": {
										"value": {
											"value": "@pipeline().parameters.PARAM_IS_DELTA",
											"type": "Expression"
										},
										"type": "bool"
									},
									"VAL_CNT_THRESHOLD": {
										"value": {
											"value": "@pipeline().parameters.PARAM_VAL_CNT_THRESHOLD",
											"type": "Expression"
										},
										"type": "int"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "synsppdlinte201",
									"type": "BigDataPoolReference"
								},
								"executorSize": "Small",
								"conf": {
									"spark.dynamicAllocation.enabled": null,
									"spark.dynamicAllocation.minExecutors": null,
									"spark.dynamicAllocation.maxExecutors": null
								},
								"driverSize": "Small",
								"numExecutors": null
							}
						}
					]
				}
			}
		],
		"parameters": {
			"PARAM_IFX_DB_NM": {
				"type": "string",
				"defaultValue": "content"
			},
			"PARAM_IFX_TB_NM": {
				"type": "string",
				"defaultValue": "cpt_cont_ctl"
			},
			"PARAM_OPCO": {
				"type": "string",
				"defaultValue": "PPOD"
			},
			"PARAM_DOMAIN": {
				"type": "string",
				"defaultValue": "merch/content/content-cpt-cont-ctl"
			},
			"PARAM_BASE_ADLS_CONN_STR": {
				"type": "string",
				"defaultValue": "abfss://data-integration@sasynwpdlintnpdeve201.dfs.core.windows.net/"
			},
			"PARAM_KEY_COL": {
				"type": "string",
				"defaultValue": "cont_id"
			},
			"PARAM_NO_OF_PARTITIONS": {
				"type": "int",
				"defaultValue": 25
			},
			"PARAM_IS_DELTA": {
				"type": "bool",
				"defaultValue": false
			},
			"PARAM_VAL_CNT_THRESHOLD": {
				"type": "int",
				"defaultValue": 2
			}
		},
		"variables": {
			"VAR_INGST_MERCH_FLDR_PATH": {
				"type": "String",
				"defaultValue": "opco/ppod/domain/merch/content/content-cpt-cont-ctl/lake/"
			}
		},
		"folder": {
			"name": "domain/merchandise/content"
		},
		"annotations": []
	}
}