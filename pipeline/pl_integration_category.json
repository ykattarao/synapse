{
	"name": "pl_integration_category",
	"properties": {
		"activities": [
			{
				"name": "integrate-category-default",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "nb_integrate_category_default",
						"type": "NotebookReference"
					},
					"parameters": {
						"BASE_ADLS_CONN_STR": {
							"value": {
								"value": "@pipeline().parameters.PARAM_BASE_ADLS_CONN_STR",
								"type": "Expression"
							},
							"type": "string"
						},
						"OPCO": {
							"value": {
								"value": "@pipeline().parameters.PARAM_OPCO",
								"type": "Expression"
							},
							"type": "string"
						},
						"VAL_CNT_THRESHOLD": {
							"value": {
								"value": "@pipeline().parameters.PARAM_VALUE_CNT_THRESHOLD",
								"type": "Expression"
							},
							"type": "int"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "synsppdlinte201",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": "Small",
					"numExecutors": null
				}
			},
			{
				"name": "integrate-category-tree",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Execute service-api-response",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "nb_integrate_category_tree",
						"type": "NotebookReference"
					},
					"parameters": {
						"BASE_ADLS_CONN_STR": {
							"value": {
								"value": "@pipeline().parameters.PARAM_BASE_ADLS_CONN_STR",
								"type": "Expression"
							},
							"type": "string"
						},
						"OPCO": {
							"value": {
								"value": "@pipeline().parameters.PARAM_OPCO",
								"type": "Expression"
							},
							"type": "string"
						},
						"VAL_CNT_THRESHOLD": {
							"value": {
								"value": "@pipeline().parameters.PARAM_VALUE_CNT_THRESHOLD",
								"type": "Expression"
							},
							"type": "int"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "synsppdlinte201",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": "Small",
					"numExecutors": null
				}
			},
			{
				"name": "integrate-category-image-attribute",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "integrate-category-tree",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "nb_integrate_category_catalog_image",
						"type": "NotebookReference"
					},
					"parameters": {
						"BASE_ADLS_CONN_STR": {
							"value": {
								"value": "@pipeline().parameters.PARAM_BASE_ADLS_CONN_STR",
								"type": "Expression"
							},
							"type": "string"
						},
						"KEY_COL": {
							"value": {
								"value": "@pipeline().parameters.PARAM_KEY_COL",
								"type": "Expression"
							},
							"type": "string"
						},
						"OPCO": {
							"value": {
								"value": "@pipeline().parameters.PARAM_OPCO",
								"type": "Expression"
							},
							"type": "string"
						},
						"VAL_CNT_THRESHOLD": {
							"value": {
								"value": "@pipeline().parameters.PARAM_VAL_CNT_THRESHOLD",
								"type": "Expression"
							},
							"type": "int"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "synsppdlinte201",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": "Small",
					"numExecutors": null
				}
			},
			{
				"name": "integrate-category-consumer-attribute",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "integrate-category-image-attribute",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "nb_transform_category_consumer",
						"type": "NotebookReference"
					},
					"parameters": {
						"BASE_ADLS_CONN_STR": {
							"value": {
								"value": "@pipeline().parameters.PARAM_BASE_ADLS_CONN_STR",
								"type": "Expression"
							},
							"type": "string"
						},
						"VAL_CNT_THRESHOLD": {
							"value": {
								"value": "@pipeline().parameters.PARAM_VAL_CNT_THRESHOLD",
								"type": "Expression"
							},
							"type": "int"
						},
						"KEY_COL": {
							"value": {
								"value": "@pipeline().parameters.PARAM_KEY_COL",
								"type": "Expression"
							},
							"type": "string"
						},
						"OPCO": {
							"value": {
								"value": "@pipeline().parameters.PARAM_OPCO",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "synsppdlinte201",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": "Small",
					"numExecutors": null
				}
			},
			{
				"name": "Execute service-api-response",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "integrate-category-default",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_extract_prod_service_api_response",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"PARAM_BASE_ADLS_CONN_STR": {
							"value": "@pipeline().parameters.PARAM_BASE_ADLS_CONN_STR",
							"type": "Expression"
						},
						"PARAM_OPCO": {
							"value": "@pipeline().parameters.PARAM_OPCO",
							"type": "Expression"
						},
						"PARAM_PRODUCT_API_URL": {
							"value": "@pipeline().parameters.PARAM_PRODUCT_API_URL",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"PARAM_BASE_ADLS_CONN_STR": {
				"type": "string",
				"defaultValue": "abfss://data-integration@sasynwpdlintnpdeve201.dfs.core.windows.net/"
			},
			"PARAM_OPCO": {
				"type": "string",
				"defaultValue": "fdln"
			},
			"PARAM_VAL_CNT_THRESHOLD": {
				"type": "int",
				"defaultValue": 5
			},
			"PARAM_KEY_COL": {
				"type": "string",
				"defaultValue": "attributeId"
			},
			"PARAM_PRODUCT_API_URL": {
				"type": "string",
				"defaultValue": "http://ada-product-api.service.qa.peapod.com:8080/v1/internal/products/count/"
			},
			"PARAM_VALUE_CNT_THRESHOLD": {
				"type": "int",
				"defaultValue": 2
			}
		},
		"folder": {
			"name": "integration/category"
		},
		"annotations": []
	}
}